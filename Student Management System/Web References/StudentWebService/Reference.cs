//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Student_Management_System.StudentWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourseByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTeacherOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeacherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeacherByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTeacherOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTeacherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCompletedStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompletedStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCompletedStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCompletedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::Student_Management_System.Properties.Settings.Default.Student_Management_System_StudentWebService_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllCourseCompletedEventHandler GetAllCourseCompleted;
        
        /// <remarks/>
        public event AddCourseCompletedEventHandler AddCourseCompleted;
        
        /// <remarks/>
        public event GetCourseByNameCompletedEventHandler GetCourseByNameCompleted;
        
        /// <remarks/>
        public event UpdateCourseCompletedEventHandler UpdateCourseCompleted;
        
        /// <remarks/>
        public event DeleteCourseCompletedEventHandler DeleteCourseCompleted;
        
        /// <remarks/>
        public event GetAllTeacherCompletedEventHandler GetAllTeacherCompleted;
        
        /// <remarks/>
        public event AddTeacherCompletedEventHandler AddTeacherCompleted;
        
        /// <remarks/>
        public event GetTeacherByIdCompletedEventHandler GetTeacherByIdCompleted;
        
        /// <remarks/>
        public event UpdateTeacherCompletedEventHandler UpdateTeacherCompleted;
        
        /// <remarks/>
        public event DeleteTeacherCompletedEventHandler DeleteTeacherCompleted;
        
        /// <remarks/>
        public event GetFeesCompletedEventHandler GetFeesCompleted;
        
        /// <remarks/>
        public event AddStudentCompletedEventHandler AddStudentCompleted;
        
        /// <remarks/>
        public event GetAllStudentCompletedEventHandler GetAllStudentCompleted;
        
        /// <remarks/>
        public event GetStudentByIdCompletedEventHandler GetStudentByIdCompleted;
        
        /// <remarks/>
        public event DeleteStudentCompletedEventHandler DeleteStudentCompleted;
        
        /// <remarks/>
        public event UpdateStudentCompletedEventHandler UpdateStudentCompleted;
        
        /// <remarks/>
        public event AddCompletedStudentCompletedEventHandler AddCompletedStudentCompleted;
        
        /// <remarks/>
        public event GetCompletedStudentCompletedEventHandler GetCompletedStudentCompleted;
        
        /// <remarks/>
        public event CheckCompletedStudentCompletedEventHandler CheckCompletedStudentCompleted;
        
        /// <remarks/>
        public event RemoveCompletedCompletedEventHandler RemoveCompletedCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event EditAuthCompletedEventHandler EditAuthCompleted;
        
        /// <remarks/>
        public event GetAuthByUsernameCompletedEventHandler GetAuthByUsernameCompleted;
        
        /// <remarks/>
        public event DeleteAuthCompletedEventHandler DeleteAuthCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllCourse() {
            object[] results = this.Invoke("GetAllCourse", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCourseAsync() {
            this.GetAllCourseAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCourseAsync(object userState) {
            if ((this.GetAllCourseOperationCompleted == null)) {
                this.GetAllCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCourseOperationCompleted);
            }
            this.InvokeAsync("GetAllCourse", new object[0], this.GetAllCourseOperationCompleted, userState);
        }
        
        private void OnGetAllCourseOperationCompleted(object arg) {
            if ((this.GetAllCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCourseCompleted(this, new GetAllCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCourse(string name, string duration, int fee) {
            object[] results = this.Invoke("AddCourse", new object[] {
                        name,
                        duration,
                        fee});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCourseAsync(string name, string duration, int fee) {
            this.AddCourseAsync(name, duration, fee, null);
        }
        
        /// <remarks/>
        public void AddCourseAsync(string name, string duration, int fee, object userState) {
            if ((this.AddCourseOperationCompleted == null)) {
                this.AddCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseOperationCompleted);
            }
            this.InvokeAsync("AddCourse", new object[] {
                        name,
                        duration,
                        fee}, this.AddCourseOperationCompleted, userState);
        }
        
        private void OnAddCourseOperationCompleted(object arg) {
            if ((this.AddCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseCompleted(this, new AddCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCourseByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCourseByName(string name) {
            object[] results = this.Invoke("GetCourseByName", new object[] {
                        name});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCourseByNameAsync(string name) {
            this.GetCourseByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetCourseByNameAsync(string name, object userState) {
            if ((this.GetCourseByNameOperationCompleted == null)) {
                this.GetCourseByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourseByNameOperationCompleted);
            }
            this.InvokeAsync("GetCourseByName", new object[] {
                        name}, this.GetCourseByNameOperationCompleted, userState);
        }
        
        private void OnGetCourseByNameOperationCompleted(object arg) {
            if ((this.GetCourseByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourseByNameCompleted(this, new GetCourseByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCourse(string name, string duration, int fee, int id) {
            object[] results = this.Invoke("UpdateCourse", new object[] {
                        name,
                        duration,
                        fee,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCourseAsync(string name, string duration, int fee, int id) {
            this.UpdateCourseAsync(name, duration, fee, id, null);
        }
        
        /// <remarks/>
        public void UpdateCourseAsync(string name, string duration, int fee, int id, object userState) {
            if ((this.UpdateCourseOperationCompleted == null)) {
                this.UpdateCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCourseOperationCompleted);
            }
            this.InvokeAsync("UpdateCourse", new object[] {
                        name,
                        duration,
                        fee,
                        id}, this.UpdateCourseOperationCompleted, userState);
        }
        
        private void OnUpdateCourseOperationCompleted(object arg) {
            if ((this.UpdateCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCourseCompleted(this, new UpdateCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCourse(string name) {
            this.Invoke("DeleteCourse", new object[] {
                        name});
        }
        
        /// <remarks/>
        public void DeleteCourseAsync(string name) {
            this.DeleteCourseAsync(name, null);
        }
        
        /// <remarks/>
        public void DeleteCourseAsync(string name, object userState) {
            if ((this.DeleteCourseOperationCompleted == null)) {
                this.DeleteCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCourseOperationCompleted);
            }
            this.InvokeAsync("DeleteCourse", new object[] {
                        name}, this.DeleteCourseOperationCompleted, userState);
        }
        
        private void OnDeleteCourseOperationCompleted(object arg) {
            if ((this.DeleteCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCourseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTeacher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllTeacher() {
            object[] results = this.Invoke("GetAllTeacher", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTeacherAsync() {
            this.GetAllTeacherAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTeacherAsync(object userState) {
            if ((this.GetAllTeacherOperationCompleted == null)) {
                this.GetAllTeacherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTeacherOperationCompleted);
            }
            this.InvokeAsync("GetAllTeacher", new object[0], this.GetAllTeacherOperationCompleted, userState);
        }
        
        private void OnGetAllTeacherOperationCompleted(object arg) {
            if ((this.GetAllTeacherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTeacherCompleted(this, new GetAllTeacherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTeacher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTeacher(string name, string surname, string subject) {
            object[] results = this.Invoke("AddTeacher", new object[] {
                        name,
                        surname,
                        subject});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddTeacherAsync(string name, string surname, string subject) {
            this.AddTeacherAsync(name, surname, subject, null);
        }
        
        /// <remarks/>
        public void AddTeacherAsync(string name, string surname, string subject, object userState) {
            if ((this.AddTeacherOperationCompleted == null)) {
                this.AddTeacherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeacherOperationCompleted);
            }
            this.InvokeAsync("AddTeacher", new object[] {
                        name,
                        surname,
                        subject}, this.AddTeacherOperationCompleted, userState);
        }
        
        private void OnAddTeacherOperationCompleted(object arg) {
            if ((this.AddTeacherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeacherCompleted(this, new AddTeacherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTeacherById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTeacherById(int id) {
            object[] results = this.Invoke("GetTeacherById", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTeacherByIdAsync(int id) {
            this.GetTeacherByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetTeacherByIdAsync(int id, object userState) {
            if ((this.GetTeacherByIdOperationCompleted == null)) {
                this.GetTeacherByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeacherByIdOperationCompleted);
            }
            this.InvokeAsync("GetTeacherById", new object[] {
                        id}, this.GetTeacherByIdOperationCompleted, userState);
        }
        
        private void OnGetTeacherByIdOperationCompleted(object arg) {
            if ((this.GetTeacherByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeacherByIdCompleted(this, new GetTeacherByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTeacher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateTeacher(string name, string surname, string subject, int id) {
            object[] results = this.Invoke("UpdateTeacher", new object[] {
                        name,
                        surname,
                        subject,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTeacherAsync(string name, string surname, string subject, int id) {
            this.UpdateTeacherAsync(name, surname, subject, id, null);
        }
        
        /// <remarks/>
        public void UpdateTeacherAsync(string name, string surname, string subject, int id, object userState) {
            if ((this.UpdateTeacherOperationCompleted == null)) {
                this.UpdateTeacherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTeacherOperationCompleted);
            }
            this.InvokeAsync("UpdateTeacher", new object[] {
                        name,
                        surname,
                        subject,
                        id}, this.UpdateTeacherOperationCompleted, userState);
        }
        
        private void OnUpdateTeacherOperationCompleted(object arg) {
            if ((this.UpdateTeacherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTeacherCompleted(this, new UpdateTeacherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTeacher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTeacher(int id) {
            this.Invoke("DeleteTeacher", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteTeacherAsync(int id) {
            this.DeleteTeacherAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteTeacherAsync(int id, object userState) {
            if ((this.DeleteTeacherOperationCompleted == null)) {
                this.DeleteTeacherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTeacherOperationCompleted);
            }
            this.InvokeAsync("DeleteTeacher", new object[] {
                        id}, this.DeleteTeacherOperationCompleted, userState);
        }
        
        private void OnDeleteTeacherOperationCompleted(object arg) {
            if ((this.DeleteTeacherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTeacherCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFees(string name) {
            object[] results = this.Invoke("GetFees", new object[] {
                        name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeesAsync(string name) {
            this.GetFeesAsync(name, null);
        }
        
        /// <remarks/>
        public void GetFeesAsync(string name, object userState) {
            if ((this.GetFeesOperationCompleted == null)) {
                this.GetFeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeesOperationCompleted);
            }
            this.InvokeAsync("GetFees", new object[] {
                        name}, this.GetFeesOperationCompleted, userState);
        }
        
        private void OnGetFeesOperationCompleted(object arg) {
            if ((this.GetFeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeesCompleted(this, new GetFeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddStudent(string[] inputs, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] image) {
            object[] results = this.Invoke("AddStudent", new object[] {
                        inputs,
                        image});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentAsync(string[] inputs, byte[] image) {
            this.AddStudentAsync(inputs, image, null);
        }
        
        /// <remarks/>
        public void AddStudentAsync(string[] inputs, byte[] image, object userState) {
            if ((this.AddStudentOperationCompleted == null)) {
                this.AddStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentOperationCompleted);
            }
            this.InvokeAsync("AddStudent", new object[] {
                        inputs,
                        image}, this.AddStudentOperationCompleted, userState);
        }
        
        private void OnAddStudentOperationCompleted(object arg) {
            if ((this.AddStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentCompleted(this, new AddStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllStudent() {
            object[] results = this.Invoke("GetAllStudent", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllStudentAsync() {
            this.GetAllStudentAsync(null);
        }
        
        /// <remarks/>
        public void GetAllStudentAsync(object userState) {
            if ((this.GetAllStudentOperationCompleted == null)) {
                this.GetAllStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllStudentOperationCompleted);
            }
            this.InvokeAsync("GetAllStudent", new object[0], this.GetAllStudentOperationCompleted, userState);
        }
        
        private void OnGetAllStudentOperationCompleted(object arg) {
            if ((this.GetAllStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllStudentCompleted(this, new GetAllStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStudentById(int id) {
            object[] results = this.Invoke("GetStudentById", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentByIdAsync(int id) {
            this.GetStudentByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetStudentByIdAsync(int id, object userState) {
            if ((this.GetStudentByIdOperationCompleted == null)) {
                this.GetStudentByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentByIdOperationCompleted);
            }
            this.InvokeAsync("GetStudentById", new object[] {
                        id}, this.GetStudentByIdOperationCompleted, userState);
        }
        
        private void OnGetStudentByIdOperationCompleted(object arg) {
            if ((this.GetStudentByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentByIdCompleted(this, new GetStudentByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteStudent(int id) {
            this.Invoke("DeleteStudent", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteStudentAsync(int id) {
            this.DeleteStudentAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteStudentAsync(int id, object userState) {
            if ((this.DeleteStudentOperationCompleted == null)) {
                this.DeleteStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentOperationCompleted);
            }
            this.InvokeAsync("DeleteStudent", new object[] {
                        id}, this.DeleteStudentOperationCompleted, userState);
        }
        
        private void OnDeleteStudentOperationCompleted(object arg) {
            if ((this.DeleteStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateStudent(string[] inputs, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] image, int id) {
            object[] results = this.Invoke("UpdateStudent", new object[] {
                        inputs,
                        image,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStudentAsync(string[] inputs, byte[] image, int id) {
            this.UpdateStudentAsync(inputs, image, id, null);
        }
        
        /// <remarks/>
        public void UpdateStudentAsync(string[] inputs, byte[] image, int id, object userState) {
            if ((this.UpdateStudentOperationCompleted == null)) {
                this.UpdateStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStudentOperationCompleted);
            }
            this.InvokeAsync("UpdateStudent", new object[] {
                        inputs,
                        image,
                        id}, this.UpdateStudentOperationCompleted, userState);
        }
        
        private void OnUpdateStudentOperationCompleted(object arg) {
            if ((this.UpdateStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStudentCompleted(this, new UpdateStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCompletedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCompletedStudent(string[] inputs, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] image) {
            this.Invoke("AddCompletedStudent", new object[] {
                        inputs,
                        image});
        }
        
        /// <remarks/>
        public void AddCompletedStudentAsync(string[] inputs, byte[] image) {
            this.AddCompletedStudentAsync(inputs, image, null);
        }
        
        /// <remarks/>
        public void AddCompletedStudentAsync(string[] inputs, byte[] image, object userState) {
            if ((this.AddCompletedStudentOperationCompleted == null)) {
                this.AddCompletedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCompletedStudentOperationCompleted);
            }
            this.InvokeAsync("AddCompletedStudent", new object[] {
                        inputs,
                        image}, this.AddCompletedStudentOperationCompleted, userState);
        }
        
        private void OnAddCompletedStudentOperationCompleted(object arg) {
            if ((this.AddCompletedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompletedStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompletedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCompletedStudent() {
            object[] results = this.Invoke("GetCompletedStudent", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompletedStudentAsync() {
            this.GetCompletedStudentAsync(null);
        }
        
        /// <remarks/>
        public void GetCompletedStudentAsync(object userState) {
            if ((this.GetCompletedStudentOperationCompleted == null)) {
                this.GetCompletedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompletedStudentOperationCompleted);
            }
            this.InvokeAsync("GetCompletedStudent", new object[0], this.GetCompletedStudentOperationCompleted, userState);
        }
        
        private void OnGetCompletedStudentOperationCompleted(object arg) {
            if ((this.GetCompletedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompletedStudentCompleted(this, new GetCompletedStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCompletedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckCompletedStudent(int id) {
            object[] results = this.Invoke("CheckCompletedStudent", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCompletedStudentAsync(int id) {
            this.CheckCompletedStudentAsync(id, null);
        }
        
        /// <remarks/>
        public void CheckCompletedStudentAsync(int id, object userState) {
            if ((this.CheckCompletedStudentOperationCompleted == null)) {
                this.CheckCompletedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCompletedStudentOperationCompleted);
            }
            this.InvokeAsync("CheckCompletedStudent", new object[] {
                        id}, this.CheckCompletedStudentOperationCompleted, userState);
        }
        
        private void OnCheckCompletedStudentOperationCompleted(object arg) {
            if ((this.CheckCompletedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCompletedStudentCompleted(this, new CheckCompletedStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveCompleted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveCompleted(int id) {
            this.Invoke("RemoveCompleted", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void RemoveCompletedAsync(int id) {
            this.RemoveCompletedAsync(id, null);
        }
        
        /// <remarks/>
        public void RemoveCompletedAsync(int id, object userState) {
            if ((this.RemoveCompletedOperationCompleted == null)) {
                this.RemoveCompletedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCompletedOperationCompleted);
            }
            this.InvokeAsync("RemoveCompleted", new object[] {
                        id}, this.RemoveCompletedOperationCompleted, userState);
        }
        
        private void OnRemoveCompletedOperationCompleted(object arg) {
            if ((this.RemoveCompletedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCompletedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUser(string[] inputs) {
            object[] results = this.Invoke("AddUser", new object[] {
                        inputs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string[] inputs) {
            this.AddUserAsync(inputs, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string[] inputs, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        inputs}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EditAuth(string[] inputs, int id) {
            object[] results = this.Invoke("EditAuth", new object[] {
                        inputs,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EditAuthAsync(string[] inputs, int id) {
            this.EditAuthAsync(inputs, id, null);
        }
        
        /// <remarks/>
        public void EditAuthAsync(string[] inputs, int id, object userState) {
            if ((this.EditAuthOperationCompleted == null)) {
                this.EditAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAuthOperationCompleted);
            }
            this.InvokeAsync("EditAuth", new object[] {
                        inputs,
                        id}, this.EditAuthOperationCompleted, userState);
        }
        
        private void OnEditAuthOperationCompleted(object arg) {
            if ((this.EditAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAuthCompleted(this, new EditAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuthByUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAuthByUsername(string uname) {
            object[] results = this.Invoke("GetAuthByUsername", new object[] {
                        uname});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthByUsernameAsync(string uname) {
            this.GetAuthByUsernameAsync(uname, null);
        }
        
        /// <remarks/>
        public void GetAuthByUsernameAsync(string uname, object userState) {
            if ((this.GetAuthByUsernameOperationCompleted == null)) {
                this.GetAuthByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthByUsernameOperationCompleted);
            }
            this.InvokeAsync("GetAuthByUsername", new object[] {
                        uname}, this.GetAuthByUsernameOperationCompleted, userState);
        }
        
        private void OnGetAuthByUsernameOperationCompleted(object arg) {
            if ((this.GetAuthByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthByUsernameCompleted(this, new GetAuthByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAuth(int id) {
            this.Invoke("DeleteAuth", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteAuthAsync(int id) {
            this.DeleteAuthAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteAuthAsync(int id, object userState) {
            if ((this.DeleteAuthOperationCompleted == null)) {
                this.DeleteAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAuthOperationCompleted);
            }
            this.InvokeAsync("DeleteAuth", new object[] {
                        id}, this.DeleteAuthOperationCompleted, userState);
        }
        
        private void OnDeleteAuthOperationCompleted(object arg) {
            if ((this.DeleteAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAuthCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Login(string uname, string pass) {
            object[] results = this.Invoke("Login", new object[] {
                        uname,
                        pass});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string uname, string pass) {
            this.LoginAsync(uname, pass, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string uname, string pass, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        uname,
                        pass}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAllCourseCompletedEventHandler(object sender, GetAllCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCourseCompletedEventHandler(object sender, AddCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCourseByNameCompletedEventHandler(object sender, GetCourseByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourseByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourseByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCourseCompletedEventHandler(object sender, UpdateCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCourseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAllTeacherCompletedEventHandler(object sender, GetAllTeacherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTeacherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTeacherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddTeacherCompletedEventHandler(object sender, AddTeacherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeacherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTeacherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTeacherByIdCompletedEventHandler(object sender, GetTeacherByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeacherByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeacherByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateTeacherCompletedEventHandler(object sender, UpdateTeacherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTeacherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTeacherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTeacherCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFeesCompletedEventHandler(object sender, GetFeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddStudentCompletedEventHandler(object sender, AddStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAllStudentCompletedEventHandler(object sender, GetAllStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetStudentByIdCompletedEventHandler(object sender, GetStudentByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateStudentCompletedEventHandler(object sender, UpdateStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCompletedStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCompletedStudentCompletedEventHandler(object sender, GetCompletedStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckCompletedStudentCompletedEventHandler(object sender, CheckCompletedStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCompletedStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCompletedStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemoveCompletedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditAuthCompletedEventHandler(object sender, EditAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAuthByUsernameCompletedEventHandler(object sender, GetAuthByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAuthCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591